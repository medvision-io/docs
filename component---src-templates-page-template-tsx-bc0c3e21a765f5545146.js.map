{"version":3,"file":"component---src-templates-page-template-tsx-bc0c3e21a765f5545146.js","mappings":"sNAuEe,SAASA,EAAT,GAAwC,IAAhBC,EAAe,EAAfA,KAEnCC,EAMED,EANFC,eACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,eAEkBC,EAEhBJ,EAHFK,KACEC,aAAgBF,WAGZG,EAAsBN,EAAtBM,YAAaC,EAASP,EAATO,KACfC,GAAgBC,EAAAA,EAAAA,IAAgBP,EAAeQ,MAAMC,KAAI,SAACC,GAAD,OAAaA,EAAQC,KAAKC,YACnFC,EAAe,IAAIC,EAAAA,GAAQ,CAC/BC,KAAMC,KAAKC,MAAMlB,EAAYgB,MAC7BG,YAAanB,EAAYY,KAAKC,UAAYN,EAAgB,SAAWP,EAAYoB,OAE7EC,EAAmBnB,EAAWoB,MAClC,SAACC,GAAD,OAASA,EAAIC,OAAQnB,MAAAA,OAAZ,EAAYA,EAAaoB,aAEpC,OACE,gBAAC,IAAD,CACEC,gBAAiB1B,EAAYoB,KAC7BO,aAAc5B,EAAe6B,OAAOR,KACpCN,aAAcA,GAEd,uBAAKe,UAAU,uBACb,gBAAC,IAAD,CACEC,MACEzB,EAAYyB,MACZ,MACAT,EAAiBU,KACjB,OACA/B,EAAYY,KAAKC,QAEnBmB,YAAa3B,EAAY2B,cAE3B,uBAAKH,UAAU,YAAYI,MAAO,CAACC,QAAS,WAC1C,0BAAK7B,EAAYyB,OACjB,0BAAKzB,EAAY8B,MACjB,uBACEN,UAAU,oBACVO,wBAAyB,CAAEC,OAAQ/B","sources":["webpack://documentation/./src/templates/page-template.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout/Layout\";\nimport { OpenAPI } from \"../services/OpenAPI\";\nimport { OpenAPISpec } from \"../types/OpenAPISpec\";\nimport DocHead from \"../components/Layout/DocHead\";\nimport {getLatestSemver} from \"../utils\";\n\ninterface Props {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        description: string;\n        category: string;\n        date: string;\n      };\n      fields: {\n        slug: string;\n      };\n      html: string;\n    };\n    openapiYaml: {\n      info: {\n        contact: {\n          email: string;\n          url: string;\n        };\n        description: string;\n        termsOfService: string;\n        title: string;\n        version: string;\n      };\n      openapi: string;\n      x_tagGroups: {\n        name: string;\n        tags: {\n          name: string;\n          slug: string;\n        };\n        slug: string;\n      }[];\n      spec: string;\n      slug: string;\n      tags: {\n        description: string;\n        name: string;\n      };\n    };\n    allOpenapiYaml: {\n      nodes: [\n        {\n          info: {\n            version: string;\n          };\n          slug: string;\n        }\n      ]\n    };\n    site: {\n      siteMetadata: {\n        categories: {\n          name: string;\n          key: string;\n        }[];\n      };\n    };\n  };\n}\n\n// markup\nexport default function PageTemplate({ data }: Props) {\n  const {\n    markdownRemark,\n    openapiYaml,\n    allOpenapiYaml,\n    site: {\n      siteMetadata: { categories },\n    },\n  } = data;\n  const { frontmatter, html } = markdownRemark;\n  const latestVersion = getLatestSemver(allOpenapiYaml.nodes.map((openapi) => openapi.info.version));\n  const openApiStore = new OpenAPI({\n    spec: JSON.parse(openapiYaml.spec) as any as OpenAPISpec,\n    versionSlug: openapiYaml.info.version === latestVersion ? 'latest' : openapiYaml.slug,\n  });\n  const selectedCategory = categories.find(\n    (cat) => cat.key === frontmatter?.category\n  );\n  return (\n    <Layout\n      selectedVersion={openapiYaml.slug}\n      selectedPage={markdownRemark.fields.slug}\n      openApiStore={openApiStore}\n    >\n      <div className=\"blog-post-container\">\n        <DocHead\n          title={\n            frontmatter.title +\n            \" - \" +\n            selectedCategory.name +\n            \" - v\" +\n            openapiYaml.info.version\n          }\n          description={frontmatter.description}\n        />\n        <div className=\"blog-post\" style={{padding: '0 24px'}}>\n          <h1>{frontmatter.title}</h1>\n          <h4>{frontmatter.date}</h4>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PageBySlug($markdownid: String!, $verid: String!) {\n    markdownRemark(id: { eq: $markdownid }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        category\n        description\n      }\n    }\n    openapiYaml(id: { eq: $verid }) {\n      info {\n        contact {\n          email\n          url\n        }\n        description\n        termsOfService\n        title\n        version\n      }\n      openapi\n      x_tagGroups {\n        name\n        section\n        tags {\n          name\n          slug\n        }\n        slug\n      }\n      spec\n      slug\n      tags {\n        description\n        name\n      }\n    }\n    allOpenapiYaml {\n      nodes {\n        info {\n          version\n        }\n        slug\n      }\n    }\n    site {\n      siteMetadata {\n        categories {\n          name\n          key\n        }\n      }\n    }\n  }\n`;\n"],"names":["PageTemplate","data","markdownRemark","openapiYaml","allOpenapiYaml","categories","site","siteMetadata","frontmatter","html","latestVersion","getLatestSemver","nodes","map","openapi","info","version","openApiStore","OpenAPI","spec","JSON","parse","versionSlug","slug","selectedCategory","find","cat","key","category","selectedVersion","selectedPage","fields","className","title","name","description","style","padding","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}