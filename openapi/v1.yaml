openapi: 3.1.0
info:
  version: 0.1.0
  title: zviha.ai
  termsOfService: 'https://zhiva.ai/terms/'
  contact:
    email: ceo@zhiva.ai
    url: 'https://zhiva.ai/contact'
  description:
    $ref: ./info-description.md
tags:
  - name: Echo
    description: Example echo operations.
  - name: User
    description: Operations about users.
  - name: Tag
    description: This is a tag description.
x-tagGroups:
  - name: General
    section: segmentation
    tags:
      - Echo
  - name: Segmentation
    section: segmentation
    tags:
      - Tag
  - name: User Management
    section: annotation
    tags:
      - User
servers:
  - url: 'https://example.com/api/v1'
paths:
  '/segmentations/{model-uid}/studies/{study-uid}/series/{series-uid}':
    $ref: 'segmentations@{model-uid}@{study-uid}@{series-uid}.yaml'
  '/users/{username}':
    $ref: 'paths/users@{username}.yaml'
  /echo:
    $ref: paths/echo.yaml
  /pathItem:
    $ref: paths/path-item.yaml
  /pathItemWithExamples:
    $ref: paths/path-item-with-examples.yaml
x-webhooks:
  newPet:
    post:
      summary: New pet
      description: Information about a new pet in the systems
      operationId: newPet
      tags:
        - Echo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Email"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
