{"version":3,"file":"component---src-templates-page-template-tsx-6c553bff078a3c1f96f6.js","mappings":"4MAmDe,SAASA,EAAT,GAAwC,IAAhBC,EAAe,EAAfA,KAC7BC,EAAgCD,EAAhCC,eAAgBC,EAAgBF,EAAhBE,YAChBC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfC,EAAe,IAAIC,EAAAA,GAAQ,CAACC,KAAMC,KAAKC,MAAMP,EAAYK,QAC/D,OACE,gBAAC,IAAD,CACEG,gBAAiBR,EAAYS,KAC7BC,aAAcX,EAAeY,OAAOF,KACpCN,aAAcA,GAEd,uBAAKS,UAAU,uBACb,gBAAC,IAAD,CAASC,MAAOZ,EAAYY,MAAOC,YAAab,EAAYa,cAC5D,uBAAKF,UAAU,aACb,0BAAKX,EAAYY,OACjB,0BAAKZ,EAAYc,MACjB,uBACEH,UAAU,oBACVI,wBAAyB,CAAEC,OAAQf","sources":["webpack://documentation/./src/templates/page-template.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout/Layout\";\nimport {OpenAPI} from \"../services/OpenAPI\";\nimport {OpenAPISpec} from \"../types/OpenAPISpec\";\nimport DocHead from \"../components/Layout/DocHead\";\n\ninterface Props {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        description: string;\n        date: string;\n      };\n      fields: {\n        slug: string;\n      }\n      html: string;\n    };\n    openapiYaml: {\n      info: {\n        contact: {\n          email: string;\n          url: string;\n        };\n        description: string;\n        termsOfService: string;\n        title: string;\n        version: string;\n      };\n      openapi: string;\n      x_tagGroups: {\n        name: string;\n        tags: {\n          name: string;\n          slug: string;\n        };\n        slug: string;\n      };\n      spec: string,\n      slug: string;\n      tags: {\n        description: string;\n        name: string;\n      };\n    };\n  };\n}\n\n// markup\nexport default function PageTemplate({ data }: Props) {\n  const { markdownRemark, openapiYaml } = data;\n  const { frontmatter, html } = markdownRemark;\n  const openApiStore = new OpenAPI({spec: JSON.parse(openapiYaml.spec) as any as OpenAPISpec});\n  return (\n    <Layout\n      selectedVersion={openapiYaml.slug}\n      selectedPage={markdownRemark.fields.slug}\n      openApiStore={openApiStore}\n    >\n      <div className=\"blog-post-container\">\n        <DocHead title={frontmatter.title} description={frontmatter.description}/>\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\n\nexport const pageQuery = graphql`\n  query PageBySlug($markdownid: String!, $verid: String!) {\n    markdownRemark(id: { eq: $markdownid }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        category\n        description\n      }\n    }\n    openapiYaml(id: { eq: $verid }) {\n      info {\n        contact {\n          email\n          url\n        }\n        description\n        termsOfService\n        title\n        version\n      }\n      openapi\n      x_tagGroups {\n        name\n        section\n        tags {\n          name\n          slug\n        }\n        slug\n      }\n      spec\n      slug\n      tags {\n        description\n        name\n      }\n    }\n  }\n`;"],"names":["PageTemplate","data","markdownRemark","openapiYaml","frontmatter","html","openApiStore","OpenAPI","spec","JSON","parse","selectedVersion","slug","selectedPage","fields","className","title","description","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}